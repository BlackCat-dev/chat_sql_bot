import random
import csv

# --- Возможные значения для генерации ---
sotr_fields = [
    "ФИО", "подразделение", "должность", "количество_ставок", "вид_занятости",
    "категория_персонала", "ученое_звание", "ученая_степень", "возраст", "оргструктура"
]
nauka_fields = [
    "автор", "название", "второе_название", "год", "авторы", "ссылки",
    "название_журнала", "база_цитирования", "ссылка"
]

podrazdeleniya = [
    "Физико-технический институт", "Институт математики и информатики", "Институт химии",
    "Институт экономики и управления", "Институт строительства"
]
doljnosti = ["Профессор", "Доцент", "Ассистент", "Старший преподаватель", "Лаборант"]
zvaniya = ["Профессор", "Доцент", ""]
stepeni = ["Доктор наук", "Кандидат наук", ""]
orgstruktura = [
    "Кафедра нанофизики", "Кафедра дискретной математики", "Кафедра органической химии",
    "Кафедра финансов", "Кафедра архитектурного проектирования", "Кафедра бухгалтерского учета",
    "Кафедра строительных материалов", "Кафедра аналитической химии", "Кафедра компьютерных наук",
    "Кафедра маркетинга", "Кафедра управления", "Кафедра теоретической информатики"
]
zhurnaly = [
    "Журнал нанотехнологий", "Вестник математики", "Химический журнал",
    "Экономика сегодня", "Архитектура и строительство", "Вестник информатики",
    "Бухгалтерский учет сегодня", "Строительство XXI века", "Экономика образования",
    "Архитектура и проектирование", "Физика и техника", "Химия и жизнь", "Экономика и управление",
    "Дискретная математика"
]
bazy = ["Scopus", "РИНЦ", "Web of Science"]
years = list(range(2005, 2025))

# --- Примитивные шаблоны текстов и SQL ---
def get_russian_select_text_sql():
    # 1. Простейшие селекты
    queries = []
    # Все из таблицы
    queries.append((
        "Показать всех сотрудников.",
        "SELECT * FROM Сотрудники;"
    ))
    queries.append((
        "Показать все научные работы.",
        "SELECT * FROM Научные_работы;"
    ))
    # По полю
    field = random.choice(sotr_fields)
    queries.append((
        f"Вывести {field} всех сотрудников.",
        f"SELECT {field} FROM Сотрудники;"
    ))
    field = random.choice(nauka_fields)
    queries.append((
        f"Показать значение поля \"{field}\" для всех научных работ.",
        f"SELECT {field} FROM Научные_работы;"
    ))
    # С фильтром по подразделению
    pod = random.choice(podrazdeleniya)
    queries.append((
        f"Список сотрудников из {pod}.",
        f"SELECT * FROM Сотрудники WHERE подразделение = '{pod}';"
    ))
    # По должности
    dol = random.choice(doljnosti)
    queries.append((
        f"Показать всех сотрудников с должностью {dol}.",
        f"SELECT * FROM Сотрудники WHERE должность = '{dol}';"
    ))
    # По ученому званию
    zv = random.choice(zvaniya)
    if zv:
        queries.append((
            f"Показать сотрудников со званием {zv}.",
            f"SELECT * FROM Сотрудники WHERE ученое_звание = '{zv}';"
        ))

    # По степени
    st = random.choice(stepeni)
    if st:
        queries.append((
            f"Показать сотрудников с ученой степенью {st}.",
            f"SELECT * FROM Сотрудники WHERE ученая_степень = '{st}';"
        ))

    # По возрасту
    age = random.randint(25, 65)
    queries.append((
        f"Показать сотрудников старше {age} лет.",
        f"SELECT * FROM Сотрудники WHERE возраст > {age};"
    ))

    # По журналу
    zh = random.choice(zhurnaly)
    queries.append((
        f"Показать научные работы, опубликованные в журнале {zh}.",
        f"SELECT * FROM Научные_работы WHERE название_журнала = '{zh}';"
    ))

    # По базе цитирования
    baz = random.choice(bazy)
    queries.append((
        f"Показать все публикации из базы цитирования {baz}.",
        f"SELECT * FROM Научные_работы WHERE база_цитирования = '{baz}';"
    ))

    # По году
    y = random.choice(years)
    queries.append((
        f"Показать публикации за {y} год.",
        f"SELECT * FROM Научные_работы WHERE год = {y};"
    ))

    # Группировка и агрегаты
    queries.append((
        "Посчитать количество сотрудников в каждом подразделении.",
        "SELECT подразделение, COUNT(*) FROM Сотрудники GROUP BY подразделение;"
    ))
    queries.append((
        "Посчитать количество публикаций в каждом журнале.",
        "SELECT название_журнала, COUNT(*) FROM Научные_работы GROUP BY название_журнала;"
    ))
    queries.append((
        "Показать средний возраст сотрудников по подразделениям.",
        "SELECT подразделение, AVG(возраст) FROM Сотрудники GROUP BY подразделение;"
    ))
    queries.append((
        "Показать количество публикаций по каждому автору.",
        "SELECT автор, COUNT(*) FROM Научные_работы GROUP BY автор;"
    ))
    queries.append((
        "Показать сотрудников без ученой степени.",
        "SELECT * FROM Сотрудники WHERE ученая_степень = '';"
    ))
    queries.append((
        "Показать научные работы без вторых названий.",
        "SELECT * FROM Научные_работы WHERE второе_название = '';"
    ))
    # LIKE и IN
    queries.append((
        "Показать публикации, где в авторах есть Иванов.",
        "SELECT * FROM Научные_работы WHERE авторы LIKE '%Иванов%';"
    ))
    queries.append((
        "Показать сотрудников из кафедры нанофизики или кафедры архитектурного проектирования.",
        "SELECT * FROM Сотрудники WHERE оргструктура IN ('Кафедра нанофизики', 'Кафедра архитектурного проектирования');"
    ))
    # LIMIT
    queries.append((
        "Показать 5 самых молодых сотрудников.",
        "SELECT * FROM Сотрудники ORDER BY возраст ASC LIMIT 5;"
    ))
    # ORDER BY
    queries.append((
        "Показать научные работы, отсортированные по году публикации.",
        "SELECT * FROM Научные_работы ORDER BY год DESC;"
    ))
    return queries

def get_russian_join_text_sql():
    # Join по автору и ФИО
    joins = []
    joins.append((
        "Показать ФИО сотрудников и количество их научных работ.",
        "SELECT Сотрудники.ФИО, COUNT(*) FROM Сотрудники JOIN Научные_работы ON Сотрудники.ФИО = Научные_работы.автор GROUP BY Сотрудники.ФИО;"
    ))
    joins.append((
        "Показать все публикации сотрудников из Института химии.",
        "SELECT Научные_работы.* FROM Сотрудники JOIN Научные_работы ON Сотрудники.ФИО = Научные_работы.автор WHERE Сотрудники.подразделение = 'Институт химии';"
    ))
    joins.append((
        "Показать должности сотрудников и названия их публикаций.",
        "SELECT Сотрудники.должность, Научные_работы.название FROM Сотрудники JOIN Научные_работы ON Сотрудники.ФИО = Научные_работы.автор;"
    ))
    joins.append((
        "Показать авторов и названия журналов, в которых есть публикации сотрудников старше 50 лет.",
        "SELECT Научные_работы.автор, Научные_работы.название_журнала FROM Сотрудники JOIN Научные_работы ON Сотрудники.ФИО = Научные_работы.автор WHERE Сотрудники.возраст > 50;"
    ))
    joins.append((
        "Показать ФИО сотрудников и годы публикаций их научных работ.",
        "SELECT Сотрудники.ФИО, Научные_работы.год FROM Сотрудники JOIN Научные_работы ON Сотрудники.ФИО = Научные_работы.автор;"
    ))
    joins.append((
        "Показать ФИО сотрудников и количество публикаций в Scopus.",
        "SELECT Сотрудники.ФИО, COUNT(*) FROM Сотрудники JOIN Научные_работы ON Сотрудники.ФИО = Научные_работы.автор WHERE Научные_работы.база_цитирования = 'Scopus' GROUP BY Сотрудники.ФИО;"
    ))
    joins.append((
        "Показать ФИО сотрудников, которые имеют публикации в журнале 'Журнал нанотехнологий'.",
        "SELECT DISTINCT Сотрудники.ФИО FROM Сотрудники JOIN Научные_работы ON Сотрудники.ФИО = Научные_работы.автор WHERE Научные_работы.название_журнала = 'Журнал нанотехнологий';"
    ))
    joins.append((
        "Показать всех сотрудников, у которых нет научных работ.",
        "SELECT Сотрудники.ФИО FROM Сотрудники LEFT JOIN Научные_работы ON Сотрудники.ФИО = Научные_работы.автор WHERE Научные_работы.автор IS NULL;"
    ))
    joins.append((
        "Показать ФИО сотрудников и названия их публикаций за 2022 год.",
        "SELECT Сотрудники.ФИО, Научные_работы.название FROM Сотрудники JOIN Научные_работы ON Сотрудники.ФИО = Научные_работы.автор WHERE Научные_работы.год = 2022;"
    ))
    joins.append((
        "Показать подразделения и количество публикаций их сотрудников.",
        "SELECT Сотрудники.подразделение, COUNT(*) FROM Сотрудники JOIN Научные_работы ON Сотрудники.ФИО = Научные_работы.автор GROUP BY Сотрудники.подразделение;"
    ))
    return joins

# --- Генерация датасета ---
random.seed(42)

with open("synthetic_rus_text_sql.csv", "w", encoding="utf-8", newline="") as f:
    writer = csv.writer(f)
    writer.writerow(["text", "sql"])
    for i in range(10000):
        # 20% JOIN, 80% обычные SELECT
        if random.random() < 0.2:
            text_sqls = get_russian_join_text_sql()
        else:
            text_sqls = get_russian_select_text_sql()
        text, sql = random.choice(text_sqls)
        writer.writerow([text, sql])